name: Build Documentation

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - "**"


jobs:
  build:
    name: Build documentation with latest dependencies
    runs-on: [ self-hosted, linux ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          # TODO: Re-enable when going public
          # https://github.com/gchq/Vanguard/issues/257
          # cache: pip
          # cache-dependency-path: pyproject.toml
      - name: Set up uv cache directory location
        run: echo "UV_CACHE_DIR=${{ runner.temp }}/.uv-cache" >> $GITHUB_ENV
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-doc-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            uv-${{ runner.os }}-doc-${{ hashFiles('pyproject.toml') }}
            uv-${{ runner.os }}-doc
            uv-${{ runner.os }}
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Clean installation
        run: |
          pip freeze --exclude-editable | xargs pip uninstall -y || pip freeze
      - name: Install uv
        run: pip install uv
      - name: Install documentation dependencies
        run: uv sync --extra doc --python 3.12
      - name: Debug - uv pip freeze
        run: uv pip freeze
      - name: Build documentation
        run: |
          uv run -m sphinx -b html --write-all --fresh-env --nitpicky --fail-on-warning --keep-going docs/source docs/build
      - name: Check external links
        run: |
          uv run -m sphinx -b linkcheck docs/source docs/build
      - name: Minimize UV cache
        run: uv cache prune --ci
        if: always()
  build-pinned:
    name: Build documentation with pinned package versions
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          # TODO: Re-enable when going public
          # https://github.com/gchq/Vanguard/issues/257
          # cache: pip
          # cache-dependency-path: requirements-docs.txt
      - name: Set up uv cache directory location
        run: echo "UV_CACHE_DIR=${{ runner.temp }}/.uv-cache" >> $GITHUB_ENV
      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_CACHE_DIR }}
          key: uv-${{ runner.os }}-doc-${{ hashFiles('requirements-docs.txt') }}
          restore-keys: |
            uv-${{ runner.os }}-doc-${{ hashFiles('requirements-docs.txt') }}
            uv-${{ runner.os }}-doc
            uv-${{ runner.os }}
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Clean installation
        run: |
          pip freeze --exclude-editable | xargs pip uninstall -y || pip freeze
      - name: Set up uv
        run: |
          pip install uv
          uv venv --python 3.12
      - name: Install documentation dependencies
        run: uv pip install -r requirements-docs.txt --no-deps
      - name: Build documentation
        run: |
          uv run --no-sync -m sphinx -b html --write-all --fresh-env --nitpicky --fail-on-warning --keep-going docs/source docs/build
      - name: Check external links
        run: |
          uv run --no-sync -m sphinx -b linkcheck docs/source docs/build
      - name: Minimize UV cache
        run: uv cache prune --ci
        if: always()
